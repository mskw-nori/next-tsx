import Head from 'next/head'
import Link from 'next/link'
import { SWRConfig } from 'swr'

import { Header } from '@/components/Header/Header'
import { useComments } from '@/hooks/usePosts'
import styles from '@/styles/Home.module.css'

type user = {
  id: number
  name: string
  body: string
}

const CommentComponent = () => {
  const { data, error, isLoading, isEmpty } = useComments()
  if (isLoading) {
    return <div>ローディング中</div>
  }
  if (error) {
    return <div>{error.message}</div>
  }
  if (isEmpty) {
    return <div>データは空です</div>
  }
  return (
    <ol>
      {data.map((comment: user) => {
        return (
          <li key={comment.id}>
            <Link href={`/comments/${comment.id}`}>
              <a>{`${comment.body}}`}</a>
            </Link>
          </li>
        )
      })}
    </ol>
  )
}

const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))

export const getStaticProps = async () => {
  // コメント情報の取得
  const COMMENTS_API_URL = `https://jsonplaceholder.typicode.com/comments`
  const comments = await fetch(COMMENTS_API_URL)
  const commentsData = await comments.json()
  await sleep(2000)

  return {
    props: {
      fallback: {
        [COMMENTS_API_URL]: commentsData
      }
    }
  }
}

const Comments = (props: any) => {
  const { fallback } = props
  return (
    <SWRConfig value={{ fallback }}>
      <div className={styles.container}>
        <Head>
          <title>Create App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        <CommentComponent />
      </div>
    </SWRConfig>
  )
}

export default Comments
