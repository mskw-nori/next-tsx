import Head from 'next/head'
import Link from 'next/link'
import { SWRConfig } from 'swr'

import { Header } from '@/components/Header/Header'
import { useUsers } from '@/hooks/usePosts'
import styles from '@/styles/Home.module.css'
import type { ExtendedNextPage } from '@/types'
import { API_URL } from '@/utills/API'

type user = {
  id: number
  name: string
  email: string
}

const UserComponent = () => {
  const { data, error, isLoading, isEmpty } = useUsers()
  if (isLoading) {
    return <div>ローディング中</div>
  }
  if (error) {
    return <div>{error.message}</div>
  }
  if (isEmpty) {
    return <div>データは空です</div>
  }
  return (
    <ol>
      {data.map((user: user) => {
        return (
          <li key={user.id}>
            <Link href={`/users/${user.id}`}>
              <a>{`${user.name} / email : ${user.email}`}</a>
            </Link>
          </li>
        )
      })}
    </ol>
  )
}

export const getServerSideProps = async () => {
  // ユーザー一覧の取得
  const USERS_API_URL = `${API_URL}users`
  const user = await fetch(USERS_API_URL)
  const userData = await user.json()

  return {
    props: {
      fallback: {
        [USERS_API_URL]: userData
      }
    }
  }
}

const Users: ExtendedNextPage = (props: any) => {
  const { fallback } = props
  return (
    <SWRConfig value={{ fallback }}>
      <div className={styles.container}>
        <Head>
          <title>Create App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        <UserComponent />
      </div>
    </SWRConfig>
  )
}

export default Users
