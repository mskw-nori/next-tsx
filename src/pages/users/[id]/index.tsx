import Head from 'next/head'
import { useRouter } from 'next/router'
import { SWRConfig } from 'swr'

import { Header } from '@/components/Header/Header'
import { PostsByUserId } from '@/components/Posts/PostsByUserId'
import { useUserPost } from '@/hooks/usePosts'
import styles from '@/styles/Home.module.css'
import { API_URL } from '@/utills/API'
export const getServerSideProps = async (ctx: any) => {
  // ユーザー情報の取得
  const { id } = ctx.query
  const USER_API_URL = `${API_URL}users/${id}`
  const user = await fetch(USER_API_URL)
  const userData = await user.json()
  // ユーザーの投稿情報の取得
  const POSTS_API_URL = `${API_URL}posts?userId=${userData.id}`
  const posts = await fetch(POSTS_API_URL)
  const postsData = await posts.json()

  return {
    props: {
      fallback: {
        [USER_API_URL]: userData,
        [POSTS_API_URL]: postsData
      }
    }
  }
}

const UseUser = () => {
  const router = useRouter()
  const { data, error, isLoading } = useUserPost(router.query.id ? router.query.id : null)
  if (isLoading) {
    return <div>ローディング中</div>
  }
  if (error) {
    return <div>{error.message}</div>
  }
  return (
    <div>
      <h1>{data.name}</h1>
      <h2>投稿</h2> <PostsByUserId id={data.id} />
    </div>
  )
}

const UserId = (props: any) => {
  const { fallback } = props
  return (
    <SWRConfig value={{ fallback }}>
      <div className={styles.container}>
        <Head>
          <title>Create App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        <UseUser />
      </div>
    </SWRConfig>
  )
}

export default UserId
